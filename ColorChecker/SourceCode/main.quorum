use Libraries.Robots.Lego.Motor
use Libraries.Robots.Lego.ColorSensor
use Libraries.Robots.Lego.Utility
use Libraries.Robots.Lego.Screen
use Libraries.Robots.Lego.Sound
use Libraries.Robots.Lego.Button
use Libraries.Robots.Lego.TouchSensor
use Libraries.Robots.Lego.UltrasonicSensor
use Libraries.Containers.Array
use Libraries.Robots.Lego.GyroSensor
use Libraries.Compute.Math

//instandceate actions
Motor motor
ColorSensor colorSensor
Utility utility
Screen screen
Sound sound
Button button
TouchSensor touchSensor
UltrasonicSensor ultrasonicSensor
GyroSensor gyroSensor
Math math
//set sensor ports 
colorSensor:SetPort(1)
ultrasonicSensor:SetPort(2)
gyroSensor:SetPort(3)
touchSensor:SetPort(4)

sound:SetVolume(100) 
integer duration=80 
motor:SetSpeed("A",6)
motor:SetSpeed("B",10)
motor:SetSpeed("C",10)
motor:RotateForward("A")
motor:RotateForward("B")
motor:RotateForward("C")
utility:DelayMilliseconds(100) 
// just to get the robot moving!
repeat until touchSensor:IsPressed()// or use this one to stop by pressing the touch sensor.

// make an array and then get the color data form the color sensor and make the numbers into an integer 255 times larger than the 0.0 - 1.0 range
//This simulates the standard RGB 255,255,255 color palete often seen in color mixing software.
Array<number> redGreenBlueLevels = colorSensor:GetRedGreenBlueLevels()
number red = redGreenBlueLevels:Get(0)*255 
number green = redGreenBlueLevels:Get(1)*255
number blue = redGreenBlueLevels:Get(2)*255
red = math:Round(red)
green = math:Round(green)
blue = math:Round(blue)
integer ired =  cast(integer, red)
integer igreen = cast(integer,green)
integer iblue = cast(integer,blue)
// put the current color numbers on the screen
screen:OutputLarge("Red: " + ired, 1)
screen:OutputLarge("Green: " + igreen, 3)
screen:OutputLarge("Blue: " + iblue, 5)
utility:DelayMilliseconds(1000)
// map the RGB intergers to a pitch and set of range of +/- 2 to ajust for small variation
//these are a lot of elseif's to evaulate for 30 colors
if ired>253 and ired<256 and igreen>253 and igreen<256 and iblue>253 and iblue<256// 0 white
utility:DelayMilliseconds(duration)

end
utility:DelayMilliseconds(duration)
end